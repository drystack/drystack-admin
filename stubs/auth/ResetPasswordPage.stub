<?php

namespace {{namespace}};

use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Facades\Validator;
use Livewire\Component;

class ResetPasswordPage extends Component
{
    public string $token = '';
    public string $email = '';
    public string $password = '';
    public string $password_confirmation = '';

    public string $title = "title.reset-password.page"; //Key of translation string

    protected $rules = [
        'password' => 'required|string|confirmed',
    ];

    public function mount($token, $email) {
        $this->token = $token;
        $this->email = $email;
    }

    public function render() {
        return view('{{prefix}}.auth.reset-password')->layout('drystack::layout_guest');
    }

    public function submit() {
        $this->validate();
        if ($this->resetPassword()) {
            return redirect()->intended('dashboard');
        }
    }

    private function resetPassword(): bool {
        $response = Password::reset([
            'token' => $this->token,
            'email' => $this->email
        ], function (User $user) {
            $user->update(['password' => Hash::make($this->password)]);
            Auth::login($user, true);
        });

        if ($response != Password::PASSWORD_RESET) {
            session()->flash('error', __($response));
            return false;
        } else {
            return true;
        }
    }
}
